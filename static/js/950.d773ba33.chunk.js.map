{"version":3,"file":"static/js/950.d773ba33.chunk.js","mappings":"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","sources":["components/MainTitle/Title.styled.jsx","components/MainTitle/MainTitle.jsx","components/RecipeGallery/RecipeGallery.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","redux/Recipes/SearchBy/selectors.js","hooks/useSearchBy.js","pages/Search.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Title = styled.div`\n  position: relative;\n  margin-top: 114px;\n  color: var(--color-text-main);\n\n  & h2 {\n    color: var(--color-text-main);\n    font-weight: 600;\n    font-size: 28px;\n    line-height: 28px;\n    letter-spacing: -0.56px;\n    &.transparent {\n      color: transparent;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 136px;\n    & h2 {\n      font-size: 32px;\n      line-height: 32px;\n      letter-spacing: -0.64px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 164px;\n    & h2 {\n      font-size: 44px;\n      line-height: 44px;\n      letter-spacing: -0.88px;\n    }\n  }\n\n  & svg {\n    position: absolute;\n\n    &.circle {\n      left: 231px;\n      width: 6px;\n      height: 6px;\n      color: var(--color-text-main);\n      @media screen and (min-width: 768px) {\n        display: none;\n      }\n    }\n\n    &.square {\n      rotate: -25deg;\n      width: 8px;\n      height: 8px;\n      border-radius: 3px;\n      color: var(--color-accent);\n      @media screen and (min-width: 768px) {\n        width: 12px;\n        height: 12px;\n      }\n    }\n\n    &.square.left {\n      left: 104px;\n      bottom: 50px;\n      @media screen and (min-width: 768px) {\n        left: 187px;\n        bottom: 64px;\n      }\n      @media screen and (min-width: 1440px) {\n        left: 228px;\n        bottom: 72px;\n      }\n    }\n\n    &.square.right {\n      right: 0;\n      bottom: 23px;\n      @media screen and (min-width: 768px) {\n        right: -9px;\n        bottom: 51px;\n      }\n      @media screen and (min-width: 1440px) {\n        right: 71px;\n        bottom: 59px;\n      }\n    }\n\n    &.square.center {\n      display: none;\n      color: var(--color-text-main);\n      @media screen and (min-width: 768px) {\n        display: block;\n        left: 405px;\n        bottom: -3px;\n      }\n      @media screen and (min-width: 1440px) {\n        left: 707px;\n        bottom: -8px;\n      }\n    }\n  }\n`;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {BsFillCircleFill, BsFillSquareFill} from 'react-icons/bs'\n\nimport Title from './Title.styled';\n\nconst MainTitle = ({ className, children }) => {\n  return (\n    <Title className={\"container\"}>\n      <h2 className={className}>{children}</h2>\n      <BsFillCircleFill className='circle' />\n      <BsFillSquareFill className='square left' />\n      <BsFillSquareFill className='square right' />\n      <BsFillSquareFill className='square center'/>\n    </Title>\n  );\n};\n\nMainTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default MainTitle;\n","import { Link } from 'react-router-dom';\nimport {\n  RecipeContainer,\n  RecipeImg,\n  List,\n  Recipe,\n  Description,\n} from './RecipeGallery.styled';\nimport IngredientsPlaceholder from '../../assets/food-default.svg';\nconst RecipeGallery = ({ recipes = null }) => {\n  return (\n    recipes && (\n      <>\n      <List className=\"container\">\n        {recipes.map(({ _id, title, thumb }) => (\n          <Recipe key={_id}>\n            <Link to={`/recipe/${_id}`}>\n              <RecipeContainer>\n                <Description>\n                  <p>{title}</p>\n                </Description>\n                <RecipeImg\n                  src={thumb ? thumb : IngredientsPlaceholder}\n                  loading=\"lazy\"\n                  alt={title}\n                />\n              </RecipeContainer>\n            </Link>\n          </Recipe>\n        ))}\n      </List>\n      </>\n    )\n  );\n};\n\nexport default RecipeGallery;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n   \n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nexport const Input = styled.input`\n    width: 464px;\n    height: 69px;\n    padding-left: 48px;\n    font-size: 16px;\n`\n\nexport const Btn = styled.button`\n    width: 161px;\n    height: 70px;\n    font-size: 16px;\n`\n\nexport const Select = styled.select`\n    width: 198px;\n    height: 49px;\n    letter-spacing: -0.28px;\n    padding: 0 14px;\n    margin-left: 18px;\n`\n\nexport const Div = styled.div`\n    margin-top: 115px;\n    margin-bottom: 27px;\n`","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport {Input, Btn, Select, Div, Form} from './Searchbar.styled'\n\n\nimport { useDispatch } from 'react-redux';\nimport {getSearchByThunk} from '../../redux/Recipes/SearchBy/operations'\nimport {SEARCH_BY_TITLE, SEARCH_BY_INGREDIENT} from '../../utils/constants'\n\n  \n  \nexport function Searchbar ({onSubmit}) {\n    const [value, setValue] = useState('');\n    const [selectedValue, setSelectedValue] = useState('title')\n    const [isTyping, setIsTyping] = useState(false)\n    const location = useLocation()\n\n    const dispatch = useDispatch()\n    \n\n\n\n// Функция записывает значение инпута в состояние\n  const handleInputChange = ({ target }) => {\n    const inputValue = target.value\n    if (target.name === 'value') {\n        \n      setValue(inputValue);\n      setIsTyping(inputValue !== '');\n    }\n    };\n\n\n// Функция записывает в состояние значение селекта  \n  const handleSelectChange = ({target}) => {\n    const selectValue = target.value\n    \n    setSelectedValue(selectValue)\n    \n   }\n\n\n// Ефект для отправки запроса если пользователь сделает паузу при вводе запроса   \n  useEffect(()=> {\n    if (!isTyping || value.trim() === '') {\n        return;\n      }\n      \n      const delayDebounceRequest = setTimeout(() => {\n        if (selectedValue === \"ingredients\" && value !== \"\") {\n          dispatch(getSearchByThunk({query:value, method:SEARCH_BY_INGREDIENT}))\n           \n           }\n        if (selectedValue === \"title\" && value !== \"\") {\n          dispatch(getSearchByThunk({query:value, method:SEARCH_BY_TITLE}))\n           \n         }\n      }, 1500)\n\n    return () => clearTimeout(delayDebounceRequest);\n  }, [value, selectedValue,isTyping, dispatch ])\n\n  \n\n// Отправка введенных значений по клику  \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (value.trim() === '') {\n      return;\n    }\n   \n    setIsTyping(false)\n    onSubmit(value, selectedValue);\n   \n  };\n\n    return (\n        <>\n          <Form>\n            <Div>\n            <Input\n                type=\"text\"\n                name=\"value\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search recipes\"\n                onChange={handleInputChange}\n                value={value}\n              />\n           <Btn onClick={handleSubmit} type=\"submit\">Search</Btn>\n            </Div>\n           \n           \n            {location.pathname === '/search' && <label>\n            Search by: <Select onChange={handleSelectChange}>\n                \n                <option name=\"title\" value=\"title\">Title</option>\n                <option name=\"ingredients\" value=\"ingredients\">Ingredients</option>\n                \n            </Select></label>}\n           \n           \n          </Form>\n        </>\n      );\n  }\n\n\n  ","export const selectSearchByResult = state => state.recipes.searchBy.items;\nexport const selectSearchByQuery = state => state.recipes.searchBy.query;\nexport const selectSearchByError = state => state.recipes.searchBy.error;\nexport const selectSearchByPage = state => state.recipes.searchBy.page;\nexport const selectSearchByTotal = state => state.recipes.searchBy.total;\nexport const selectSearchByPages = state => state.recipes.searchBy.pages;\nexport const selectSearchByLimit = state => state.recipes.searchBy.limit;\nexport const selectSearchByLoading = state => state.recipes.searchBy.isLoading;\nexport const selectSearchByStatus = state => state.recipes.searchBy.status;\nexport const selectSearchByMethod = state => state.recipes.searchBy.method;\n","import { useSelector } from 'react-redux';\nimport {\n  selectSearchByResult,\n  selectSearchByQuery,\n  selectSearchByError,\n  selectSearchByLoading,\n  selectSearchByLimit,\n  selectSearchByPages,\n  selectSearchByTotal,\n  selectSearchByPage,\n  selectSearchByMethod,\n  selectSearchByStatus,\n} from 'redux/Recipes/SearchBy/selectors';\n\nconst useSearchBy = () => {\n  const isLoading = useSelector(selectSearchByLoading);\n  const isError = useSelector(selectSearchByError);\n  const query = useSelector(selectSearchByQuery);\n  const data = useSelector(selectSearchByResult);\n  const recipes = useSelector(selectSearchByResult);\n  const page = useSelector(selectSearchByPage);\n  const total = useSelector(selectSearchByTotal);\n  const pages = useSelector(selectSearchByPages);\n  const limit = useSelector(selectSearchByLimit);\n  const status = useSelector(selectSearchByStatus);\n  const method = useSelector(selectSearchByMethod);\n\n  return {\n    isLoading,\n    isError,\n    data,\n    query,\n    page,\n    total,\n    pages,\n    limit,\n    recipes,\n    method,\n    status,\n  };\n};\n\nexport default useSearchBy;\n","import MainTitle from 'components/MainTitle/MainTitle';\nimport RecipeGallery from '../components/RecipeGallery/RecipeGallery'\n\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\n\nimport useSearchBy from '../hooks/useSearchBy'\n\n\nimport img from '../assets/images/empty-img.png';\nimport { useDispatch } from 'react-redux';\nimport {getSearchByThunk} from '../redux/Recipes/SearchBy/operations'\nimport {SEARCH_BY_TITLE, SEARCH_BY_INGREDIENT} from '../utils/constants'\n\n\nconst Search = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedValue, setSelectedValue] = useState('title');\n\n  const dispatch = useDispatch()\n  const {recipes, status, isLoading, error} = useSearchBy()\n  \n\n  \n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n   \n\n    if (selectedValue === 'ingredients' && searchValue !== '') {\n        dispatch(getSearchByThunk({query:searchValue, method:SEARCH_BY_INGREDIENT}))\n    }\n    if (selectedValue === 'title' && searchValue !== '') {\n        dispatch(getSearchByThunk({query:searchValue, method:SEARCH_BY_TITLE}))\n    }\n  }, [searchValue, selectedValue, dispatch]);\n\n \n\n  // Функция записывает полученные значения из SearchBar в стейт\n  const formOnsubmitHandler = (value, selectValue) => {\n    if (searchValue !== value) {\n      setSearchValue(value);\n    }\n\n    if (selectedValue !== selectValue) {\n      setSelectedValue(selectValue);\n    }\n  };\n  console.log(recipes);\n  console.log(status);\n\n  console.log(error); // Just for build\n\n  return (\n    <>\n    <MainTitle>\n      Search\n    </MainTitle>\n    <Searchbar\n    onSubmit={formOnsubmitHandler}\n      />\n      {isLoading && <p>Loading...</p>}\n  {status === 2 && <RecipeGallery recipes={recipes} />}\n  {status === 1 && <p>...</p>}\n  {status === 3 && (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <img src={img} alt=\"Корзина с фруктами\" width=\"350\" />\n      <p>Try looking for something else..</p>\n    </div>\n  )}\n  {(status === 2 && recipes) && (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <img src={img} alt=\"Корзина с фруктами\" width=\"350\" />\n      <p>Try looking for something else..</p>\n    </div>\n  )}\n  \n    </>\n  );\n};\n\nexport default Search;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","_ref","className","children","_jsxs","Title","_jsx","BsFillCircleFill","BsFillSquareFill","_ref$recipes","recipes","_Fragment","List","map","_ref2","_id","title","thumb","Recipe","Link","to","concat","RecipeContainer","Description","RecipeImg","src","IngredientsPlaceholder","loading","alt","Form","Input","_templateObject2","Btn","_templateObject3","Select","_templateObject4","Div","_templateObject5","Searchbar","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","selectedValue","setSelectedValue","_useState5","_useState6","isTyping","setIsTyping","location","useLocation","dispatch","useDispatch","useEffect","trim","delayDebounceRequest","setTimeout","getSearchByThunk","query","method","SEARCH_BY_INGREDIENT","SEARCH_BY_TITLE","clearTimeout","type","name","autoComplete","autoFocus","placeholder","onChange","target","inputValue","onClick","e","preventDefault","pathname","_ref3","selectValue","selectSearchByResult","state","searchBy","items","selectSearchByQuery","selectSearchByError","error","selectSearchByPage","page","selectSearchByTotal","total","selectSearchByPages","pages","selectSearchByLimit","limit","selectSearchByLoading","isLoading","selectSearchByStatus","status","selectSearchByMethod","useSelector","isError","data","searchValue","setSearchValue","_useSearchBy","useSearchBy","console","log","MainTitle","RecipeGallery","style","display","alignItems","justifyContent","flexDirection","img","width"],"sourceRoot":""}