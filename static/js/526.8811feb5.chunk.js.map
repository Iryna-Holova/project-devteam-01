{"version":3,"file":"static/js/526.8811feb5.chunk.js","mappings":"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","sources":["components/SharedForm/SharedForm.jsx","assets/svg/authFormOrder/bg-registration-mobile.svg","assets/svg/authFormOrder/bg-registration-tablet.svg","assets/svg/authFormOrder/bg-registration-desktop.svg","components/SharedForm/SharedForm.styled.js","pages/Signin.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport sprite from '../../assets/images.svg';\n\nimport {\n  Image,\n  StyledForm,\n  WordForm,\n  StyledField,\n  List,\n  SubButton,\n  Router,\n  Wrapper,\n  Error,\n  FieldWrapper,\n} from './SharedForm.styled';\n\n// const isValidEmail = email => {\n//   const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//   return emailRegex.test(email);\n// };\n\n// const validate = (values) => {\n//   const errors = {};\n\n//   if (!values.email) {\n//     errors.email = 'Введіть електронну адресу';\n//   } else if (!isValidEmail(values.email)) {\n//     errors.email = 'Введіть правильну електронну адресу';\n//   }\n\n//   if (!values.name) {\n//     errors.name = 'Введіть ім\\'я';\n//   }\n\n//   if (!values.password) {\n//     errors.password = 'Введіть пароль';\n//   } else if (values.password.length < 6) {\n//     errors.password = 'Пароль повинен містити щонайменше 6 символів';\n//   }\n\n//   return errors;\n// };\n\nconst SharedForm = ({\n  initialValues,\n  validationSchema,\n  handleSubmit,\n  router,\n  nameForm,\n  urlRouter,\n  isRegisterForm,\n  nameBut,\n}) => {\n  return (\n    <Wrapper>\n      <div style={{ textAlign: 'center' }}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          {({ isSubmitting }) => (\n            <StyledForm>\n              <WordForm>{nameForm}</WordForm>\n              <List>\n                <li>\n                  {isRegisterForm && (\n                    <FieldWrapper>\n                      <ErrorMessage name=\"name\">\n                        {msg => <Error>{msg}</Error>}\n                      </ErrorMessage>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"18\"\n                        height=\"19\"\n                        viewBox=\"0 0 18 19\"\n                        fill=\"none\"\n                      >\n                        <g opacity=\"0.8\">\n                          <path\n                            d=\"M15 16.25C15 15.2033 15 14.68 14.8708 14.2541C14.58 13.2953 13.8297 12.545 12.8709 12.2542C12.445 12.125 11.9217 12.125 10.875 12.125H7.125C6.07833 12.125 5.55499 12.125 5.12914 12.2542C4.17034 12.545 3.42003 13.2953 3.12918 14.2541C3 14.68 3 15.2033 3 16.25M12.375 6.125C12.375 7.98896 10.864 9.5 9 9.5C7.13604 9.5 5.625 7.98896 5.625 6.125C5.625 4.26104 7.13604 2.75 9 2.75C10.864 2.75 12.375 4.26104 12.375 6.125Z\"\n                            stroke=\"#FAFAFA\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                          />\n                        </g>\n                      </svg>\n                      <StyledField\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                      />\n                    </FieldWrapper>\n                  )}\n                </li>\n                <li>\n                  <FieldWrapper>\n                    <ErrorMessage name=\"email\">\n                      {msg => <Error>{msg}</Error>}\n                    </ErrorMessage>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"18\"\n                      height=\"19\"\n                      viewBox=\"0 0 18 19\"\n                      fill=\"none\"\n                    >\n                      <g opacity=\"0.8\">\n                        <path\n                          d=\"M1.5 5.75L7.62369 10.0366C8.11957 10.3837 8.36751 10.5573 8.6372 10.6245C8.87542 10.6839 9.12458 10.6839 9.3628 10.6245C9.63249 10.5573 9.88043 10.3837 10.3763 10.0366L16.5 5.75M5.1 15.5H12.9C14.1601 15.5 14.7902 15.5 15.2715 15.2548C15.6948 15.039 16.039 14.6948 16.2548 14.2715C16.5 13.7902 16.5 13.1601 16.5 11.9V7.1C16.5 5.83988 16.5 5.20982 16.2548 4.72852C16.039 4.30516 15.6948 3.96095 15.2715 3.74524C14.7902 3.5 14.1601 3.5 12.9 3.5H5.1C3.83988 3.5 3.20982 3.5 2.72852 3.74524C2.30516 3.96095 1.96095 4.30516 1.74524 4.72852C1.5 5.20982 1.5 5.83988 1.5 7.1V11.9C1.5 13.1601 1.5 13.7902 1.74524 14.2715C1.96095 14.6948 2.30516 15.039 2.72852 15.2548C3.20982 15.5 3.83988 15.5 5.1 15.5Z\"\n                          stroke=\"#FAFAFA\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        />\n                      </g>\n                    </svg>\n                    <StyledField\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                    />\n                  </FieldWrapper>\n                </li>\n                <li>\n                  <FieldWrapper>\n                    <ErrorMessage name=\"password\">\n                      {msg => <Error>{msg}</Error>}\n                    </ErrorMessage>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"18\"\n                      height=\"19\"\n                      viewBox=\"0 0 18 19\"\n                      fill=\"none\"\n                    >\n                      <g opacity=\"0.8\">\n                        <path\n                          d=\"M12.75 8.75V6.5C12.75 4.42893 11.0711 2.75 9 2.75C6.92893 2.75 5.25 4.42893 5.25 6.5V8.75M5.85 16.25H12.15C13.4101 16.25 14.0402 16.25 14.5215 16.0048C14.9448 15.789 15.289 15.4448 15.5048 15.0215C15.75 14.5402 15.75 13.9101 15.75 12.65V12.35C15.75 11.0899 15.75 10.4598 15.5048 9.97852C15.289 9.55516 14.9448 9.21095 14.5215 8.99524C14.0402 8.75 13.4101 8.75 12.15 8.75H5.85C4.58988 8.75 3.95982 8.75 3.47852 8.99524C3.05516 9.21095 2.71095 9.55516 2.49524 9.97852C2.25 10.4598 2.25 11.0899 2.25 12.35V12.65C2.25 13.9101 2.25 14.5402 2.49524 15.0215C2.71095 15.4448 3.05516 15.789 3.47852 16.0048C3.95982 16.25 4.58988 16.25 5.85 16.25Z\"\n                          stroke=\"#FAFAFA\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                        />\n                      </g>\n                    </svg>\n                    <StyledField\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                    />\n                  </FieldWrapper>\n                </li>\n              </List>\n\n              <SubButton type=\"submit\">{nameBut}</SubButton>\n            </StyledForm>\n          )}\n        </Formik>\n\n        <Router to={`/${urlRouter}`}>{router}</Router>\n      </div>\n      <Image>\n        <use href={sprite + '#order-food-pana'}></use>\n      </Image>\n    </Wrapper>\n  );\n};\n\nexport default SharedForm;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBgRegistrationMobile(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 375,\n    height: 490,\n    viewBox: \"0 0 375 490\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0L90.7893 24.0665C119.983 31.8053 150.058 35.7238 180.261 35.7238V35.7238C207.783 35.7238 235.214 32.5703 262.018 26.3249L375 0V490H0V0Z\",\n    fill: \"#1E1F28\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBgRegistrationMobile);\nexport default __webpack_public_path__ + \"static/media/bg-registration-mobile.31c9268a099e562b491a4960e7229dd5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBgRegistrationTablet(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 768,\n    height: 605,\n    viewBox: \"0 0 768 605\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 16.5L194.254 78.0841C248.429 95.2592 304.923 104 361.756 104C422.857 104 483.564 94.2083 541.566 74.9972L768 0V606H0V16.5Z\",\n    fill: \"#1E1F28\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBgRegistrationTablet);\nexport default __webpack_public_path__ + \"static/media/bg-registration-tablet.f98227bc0143b57ad73eb9237ffd1e5e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBgRegistrationDesktop(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1440,\n    height: 325,\n    viewBox: \"0 0 1440 325\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0L527 46.4286L657.739 48.534C900.922 52.4503 1144.07 38.6177 1385.24 7.14621L1440 0V325H0V0Z\",\n    fill: \"#1E1F28\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBgRegistrationDesktop);\nexport default __webpack_public_path__ + \"static/media/bg-registration-desktop.d5d5440654b186017ddacb2e9f52c512.svg\";\nexport { ForwardRef as ReactComponent };","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'formik';\nimport bgMobile from '../../assets/svg/authFormOrder/bg-registration-mobile.svg';\nimport bgTablet from '../../assets/svg/authFormOrder/bg-registration-tablet.svg';\nimport bgDesktop from '../../assets/svg/authFormOrder/bg-registration-desktop.svg';\n\nexport const Wrapper = styled.div`\n  box-sizing: border-box;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  padding-top: 87px;\n  background-image: url(${bgMobile});\n  background-size: 100% 490px;\n  background-repeat: no-repeat;\n  background-position: top 322px center;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 96px;\n    background-image: url(${bgTablet});\n    background-size: 100% 606px;\n    background-position: top 419px center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    gap: 115px;\n    justify-content: center;\n    padding: 0;\n    background-image: url(${bgDesktop});\n    background-size: 100% 325px;\n    background-position: bottom center;\n  }\n`;\n\nexport const Image = styled.svg`\n  width: 285px;\n  height: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 409px;\n    height: 359px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 532px;\n    height: 468px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  box-sizing: border-box;\n  margin-top: -32px;\n  width: 335px;\n  padding: 32px 28px;\n  border-radius: 30px;\n  background-color: var(--color-start-bg);\n\n  @media screen and (min-width: 768px) {\n    margin-top: -11px;\n    width: 500px;\n    padding: 50px;\n  }\n`;\n\nexport const WordForm = styled.h2`\n  text-align: left;\n  color: var(--color-start-text);\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 28px;\n  letter-spacing: -0.48px;\n  margin-bottom: 18px;\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    font-weight: 600;\n    line-height: 30px;\n    letter-spacing: -0.56px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const List = styled.ul`\n  gap: 24px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 28px;\n  list-style: none;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 50px;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n\n  & svg {\n    position: absolute;\n    width: 18px;\n    height: 18px;\n    left: 14px;\n    top: 14px;\n\n    @media screen and (min-width: 768px) {\n      width: 24px;\n      height: 24px;\n      left: 18px;\n      top: 18px;\n    }\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  box-sizing: border-box;\n  color: var(--color-start-text);\n  width: 100%;\n  stroke-width: 1px;\n  stroke: #fff;\n  padding: 12px 12px 12px 40px;\n  background: transparent;\n  border-radius: 6px;\n  border: 1px solid gray;\n  outline: none;\n  font-family: Poppins;\n  font-size: 14px;\n  letter-spacing: -0.36px;\n\n  &:focus,\n  &:hover {\n    border: 1px solid #fff;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px 16px 16px 50px;\n    font-size: 18px;\n  }\n`;\n\nexport const SubButton = styled.button`\n  padding: 12px;\n  border-radius: 6px;\n  width: 100%;\n  background: var(--color-accent);\n  color: var(--color-start-text);\n  font-size: 16px;\n  line-height: 18px;\n  transition: color var(--transition-time) var(--cubic);\n\n  &:hover {\n    color: var(--color-icons);\n  }\n  @media screen and (min-width: 768px) {\n    padding: 21px;\n  }\n`;\n\nexport const Router = styled(Link)`\n  line-height: 57px;\n  margin-top: 18px;\n  text-decoration: underline;\n  color: var(--color-start-text);\n  transition: color var(--transition-time) var(--cubic);\n\n  &:hover {\n    color: var(--color-accent);\n  }\n`;\n\nexport const Error = styled.div`\n  font-size: 12px;\n  color: #e74a3b;\n  position: absolute;\n  bottom: -16px;\n  & ~ input {\n    border-color: #e74a3b;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport SharedForm from 'components/SharedForm/SharedForm';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport useAuth from 'hooks/use-auth';\nimport { REJECTED, RESOLVED } from 'utils/constants';\n\nconst Signin = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { status } = useAuth();\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Please enter a valid email').required('Please enter your email'),\n    password: Yup.string().required('Please enter your password'),\n  });\n\n  const handleSubmit = (\n    values,\n    { setSubmitting, setFieldTouched } //, resetForm\n  ) => {\n    setFieldTouched('email', true);\n    setFieldTouched('name', true);\n\n    if (values.email === '') {\n      console.log('Порожні поля');\n    } else {\n      console.log('Всі поля заповнені');\n      dispatch(\n        logIn({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      //resetForm();\n    }\n\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (status === RESOLVED) return navigate('/');\n    if (status === REJECTED) alert('Invalid email or password');\n  }, [status, navigate]);\n\n  return (\n    <div>\n      <SharedForm\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        handleSubmit={handleSubmit}\n        router={'Registration'}\n        urlRouter={'register'}\n        nameForm={'Sign in'}\n        nameBut={'Sign in'}\n      />\n    </div>\n  );\n};\n\nexport default Signin;\n"],"names":["_ref","initialValues","validationSchema","handleSubmit","router","nameForm","urlRouter","isRegisterForm","nameBut","_jsxs","Wrapper","children","style","textAlign","_jsx","Formik","onSubmit","_ref2","isSubmitting","StyledForm","WordForm","List","FieldWrapper","ErrorMessage","name","msg","Error","xmlns","width","height","viewBox","fill","opacity","d","stroke","StyledField","type","id","placeholder","SubButton","Router","to","concat","Image","href","sprite","styled","_templateObject","_taggedTemplateLiteral","bgMobile","bgTablet","bgDesktop","_templateObject2","Form","_templateObject3","_templateObject4","_templateObject5","_templateObject6","Field","_templateObject7","_templateObject8","Link","_templateObject9","_templateObject10","dispatch","useDispatch","navigate","useNavigate","status","useAuth","Yup","email","required","password","useEffect","RESOLVED","REJECTED","alert","SharedForm","values","setSubmitting","setFieldTouched","console","log","logIn"],"sourceRoot":""}