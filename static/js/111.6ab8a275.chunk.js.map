{"version":3,"file":"static/js/111.6ab8a275.chunk.js","mappings":"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","sources":["components/MainTitle/Title.styled.jsx","components/MainTitle/MainTitle.jsx","components/AddRecipePage/AddRecipeForm/RecipeDescription/RecipeDescription.jsx","redux/Ingredients/selectors.js","components/AddRecipePage/AddRecipeForm/RecipeIngredients/RecipeIngredients.jsx","components/AddRecipePage/AddRecipeForm/RecipePreparation/RecipePreparation.jsx","components/AddRecipePage/AddRecipeForm.styled.jsx","components/AddRecipePage/AddRecipeForm.jsx","pages/AddRecipe.jsx","redux/Categories/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Title = styled.div`\n  position: relative;\n  margin-top: 114px;\n  color: var(--color-text-main);\n\n  & h2 {\n    color: var(--color-text-main);\n    font-weight: 600;\n    font-size: 28px;\n    line-height: 28px;\n    letter-spacing: -0.56px;\n    &.transparent {\n      color: transparent;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 136px;\n    & h2 {\n      font-size: 32px;\n      line-height: 32px;\n      letter-spacing: -0.64px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 164px;\n    & h2 {\n      font-size: 44px;\n      line-height: 44px;\n      letter-spacing: -0.88px;\n    }\n  }\n\n  & svg {\n    position: absolute;\n\n    &.circle {\n      left: 231px;\n      width: 6px;\n      height: 6px;\n      color: var(--color-text-main);\n      @media screen and (min-width: 768px) {\n        display: none;\n      }\n    }\n\n    &.square {\n      rotate: -25deg;\n      width: 8px;\n      height: 8px;\n      border-radius: 3px;\n      color: var(--color-accent);\n      @media screen and (min-width: 768px) {\n        width: 12px;\n        height: 12px;\n      }\n    }\n\n    &.square.left {\n      left: 104px;\n      bottom: 50px;\n      @media screen and (min-width: 768px) {\n        left: 187px;\n        bottom: 64px;\n      }\n      @media screen and (min-width: 1440px) {\n        left: 228px;\n        bottom: 72px;\n      }\n    }\n\n    &.square.right {\n      right: 0;\n      bottom: 23px;\n      @media screen and (min-width: 768px) {\n        right: -9px;\n        bottom: 51px;\n      }\n      @media screen and (min-width: 1440px) {\n        right: 71px;\n        bottom: 59px;\n      }\n    }\n\n    &.square.center {\n      display: none;\n      color: var(--color-text-main);\n      @media screen and (min-width: 768px) {\n        display: block;\n        left: 405px;\n        bottom: -3px;\n      }\n      @media screen and (min-width: 1440px) {\n        left: 707px;\n        bottom: -8px;\n      }\n    }\n  }\n`;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {BsFillCircleFill, BsFillSquareFill} from 'react-icons/bs'\n\nimport Title from './Title.styled';\n\nconst MainTitle = ({ className, children }) => {\n  return (\n    <Title className={\"container\"}>\n      <h2 className={className}>{children}</h2>\n      <BsFillCircleFill className='circle' />\n      <BsFillSquareFill className='square left' />\n      <BsFillSquareFill className='square right' />\n      <BsFillSquareFill className='square center'/>\n    </Title>\n  );\n};\n\nMainTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default MainTitle;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\n\nconst RecipeDescription = ({ categories, handleFileChange, selectedFile }) => {\n  // const { values, setFieldValue } = useFormikContext();\n\n  return (\n    <div>\n      <h2>Recipe Description</h2>\n      <label htmlFor=\"thumb\">Thumb:</label>\n      <input type=\"file\" id=\"thumb\" name=\"thumb\" onChange={handleFileChange} />\n      <ErrorMessage name=\"thumb\" component=\"div\" />\n\n      <label htmlFor=\"title\">Title:</label>\n      <Field type=\"text\" id=\"title\" name=\"title\" placeholder=\"Enter item title\" />\n\n      <label htmlFor=\"description\">Description:</label>\n      <Field as=\"textarea\" id=\"description\" name=\"description\" placeholder=\"Enter about recipe\" />\n\n      <label htmlFor=\"category\">Category:</label>\n      <Field as=\"select\" id=\"category\" name=\"category\">\n        <option value=\"\">Select a category</option>\n        {categories && Array.isArray(categories) ? (\n          categories.map((category) => (\n            <option key={category._id.$oid} value={category._id.$oid}>\n              {category.name}\n            </option>\n          ))\n        ) : (\n          <option value=\"\">No categories available</option>\n        )}\n      </Field>\n\n      <label htmlFor=\"time\">Preparation Time:</label>\n      <Field as=\"select\" id=\"time\" name=\"time\">\n        <option value=\"\">Select cooking time</option>\n        {Array.from({ length: 24 }, (_, index) => (index + 1) * 5).map((time) => (\n          <option key={time} value={time}>\n            {time} min\n          </option>\n        ))}\n      </Field>\n    </div>\n  );\n};\n\nexport default RecipeDescription;\n","export const selectIngredients = state => state.ingredients.items;\nexport const selectStatus = state => state.ingredients.status;\nexport const selectLoading = state => state.ingredients.isLoading;\nexport const selectError = state => state.ingredients.error;\n","import React, { useEffect } from 'react';\nimport { FieldArray, useFormikContext } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIngredientsThunk } from '../../../../redux/Ingredients/operations';\nimport { selectIngredients } from '../../../../redux/Ingredients/selectors';\nimport AsyncSelect from 'react-select/async';\n\nconst RecipeIngredients = () => {\n  const { values, setFieldValue } = useFormikContext();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getIngredientsThunk());\n  }, [dispatch]);\n\n  const ingredients = useSelector(selectIngredients);\n\n  const filterIngredients = (inputValue) => {\n    return ingredients.filter((ingredient) =>\n      ingredient.name.toLowerCase().includes(inputValue.toLowerCase())\n    );\n  };\n\n  const loadIngredients = (inputValue, callback) => {\n    setTimeout(() => {\n      const filteredIngredients = filterIngredients(inputValue);\n      callback(filteredIngredients);\n    }, 1000);\n  };\n\n  const handleIngredientChange = (index, selectedOption) => {\n    setFieldValue(`ingredients[${index}].name`, selectedOption ? selectedOption : null);\n  };\n\n  return (\n    <div>\n      <h2>Ingredients</h2>\n      <FieldArray\n        name=\"ingredients\"\n        render={({ push, remove }) => (\n          <>\n            {values.ingredients.map((ingredient, index) => (\n              <div key={index}>\n                <label htmlFor={`ingredients[${index}].name`}>Ingredient Name:</label>\n                <AsyncSelect\n                  id={`ingredients[${index}].name`}\n                  name={`ingredients[${index}].name`}\n                  cacheOptions\n                  defaultOptions\n                  loadOptions={(inputValue, callback) => loadIngredients(inputValue, callback)}\n                  getOptionLabel={(option) => option.name}\n                  getOptionValue={(option) => option}\n                  value={ingredient.name}\n                  onChange={(selectedOption) => handleIngredientChange(index, selectedOption)}\n                />\n\n                <label htmlFor={`ingredients[${index}].measure`}>Measure:</label>\n                <input\n                  type=\"text\"\n                  id={`ingredients[${index}].measure`}\n                  name={`ingredients[${index}].measure`}\n                  value={ingredient.measure}\n                  onChange={(e) => setFieldValue(`ingredients[${index}].measure`, e.target.value)}\n                />\n\n                <button type=\"button\" onClick={() => remove(index)}>\n                  X\n                </button>\n              </div>\n            ))}\n\n            <button type=\"button\" onClick={() => push({ name: '', measure: '' })}>\n              Add Ingredient\n            </button>\n          </>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default RecipeIngredients;\n","import React, { useEffect, useState } from 'react';\nimport { Field, useFormikContext } from 'formik';\n\nconst RecipePreparation = () => {\n  const { values, setFieldValue } = useFormikContext();\n  const [preparation, setPreparation] = useState([]);\n\n  useEffect(() => {\n    setFieldValue('preparation', preparation.join('\\n'));\n  }, [preparation, setFieldValue]);\n\n  const handleTextareaChange = (event) => {\n    const text = event.target.value;\n    const lines = text.split('\\n');\n\n    setPreparation(lines);\n  };\n\n  return (\n    <div>\n      <h2>Preparation</h2>\n      <label htmlFor=\"preparation\">Enter the preparation steps:</label>\n      <Field\n        as=\"textarea\"\n        id=\"preparation\"\n        name=\"preparation\"\n        value={values.preparation}\n        onChange={handleTextareaChange}\n      />\n      {/* {То для того щоб було видно як має виглядати список у MyRecipes} */}\n      <p>Preparation Array:</p>\n      <ol>\n        {preparation.map((step, index) => (\n          <li key={index}>{step}</li>\n        ))}\n      </ol>\n      {/* При стилізації то можна видалити */}\n    </div>\n  );\n};\n\nexport default RecipePreparation;\n","import styled, { css } from 'styled-components';\n\nconst WrapperStyles = css`\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 343px) {\n    width: 343px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1240px;\n  }\n`;\n\nexport const Container = styled.div`\n    ${WrapperStyles}\n`;\n\nexport const AddRecipeButton = styled.button`\n  width: 129px;\n  height: 46px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport RecipeDescription from './AddRecipeForm/RecipeDescription/RecipeDescription';\nimport RecipeIngredients from './AddRecipeForm/RecipeIngredients/RecipeIngredients';\nimport RecipePreparation from './AddRecipeForm/RecipePreparation/RecipePreparation';\nimport { Container, AddRecipeButton } from './AddRecipeForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategories } from 'redux/Categories/selectors';\nimport { selectIngredients } from 'redux/Ingredients/selectors';\nimport { getCategoriesList } from '../../redux/Categories/operations';\nimport { getIngredientsThunk } from 'redux/Ingredients/operations';\nimport { addOwnRecipe } from '../../services/api/recipes-api/own';\n\nconst AddRecipeForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const categories = useSelector(selectCategories);\n  const ingredients = useSelector(selectIngredients);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    dispatch(getCategoriesList());\n    dispatch(getIngredientsThunk());\n  }, [dispatch]);\n\n  const handleFormSubmit = async (values) => {\n    const formData = new FormData();\n    formData.append('title', values.title);\n    formData.append('category', values.category);\n    formData.append('instructions', JSON.stringify(values.preparation));\n    formData.append('description', values.description);\n    formData.append('thumb', selectedFile); // Add thumb file here\n    formData.append('preview', ''); // Add preview file here if available\n    formData.append('time', values.time);\n    formData.append('tags', JSON.stringify([]));\n    values.ingredients.forEach((ingredient, index) => {\n      formData.append(`ingredients[${index}].id`, ingredient.name);\n      formData.append(`ingredients[${index}].measure`, ingredient.measure);\n    });\n\n    // Це для того щоб відобразити в консолі що передається в форм дата\n    for (const [key, value] of formData.entries()) {\n      console.log(key, value);\n    }\n    // Це для того щоб відобразити в консолі що передається в форм дата\n\n\n    try {\n      const response = await addOwnRecipe({ formData });\n      if (response) {\n        console.log('Recipe added successfully:', response);\n        navigate('/my'); // Redirect to MyRecipes page\n      } else {\n        console.log('Failed to add recipe');\n      }\n    } catch (error) {\n      console.log('Error adding recipe:', error.message);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.currentTarget.files[0];\n    setSelectedFile(file);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        category: '',\n        preparation: [],\n        description: '',\n        time: '',\n        ingredients: [],\n      }}\n      onSubmit={handleFormSubmit}\n    >\n      <Container>\n        <Form>\n          <RecipeDescription\n            categories={categories}\n            handleFileChange={handleFileChange}\n            selectedFile={selectedFile}\n          />\n          <RecipeIngredients ingredients={ingredients} />\n          <RecipePreparation />\n          <AddRecipeButton type=\"submit\">Add</AddRecipeButton>\n        </Form>\n      </Container>\n    </Formik>\n  );\n};\n\nexport default AddRecipeForm;\n","import MainTitle from \"components/MainTitle/MainTitle\";\n// import RecipeDescription from 'components/AddRecipePage/AddRecipeForm/RecipeDescription/RecipeDescription';\nimport AddRecipeForm from \"../components/AddRecipePage/AddRecipeForm\";\n\nconst AddRecipe = () => {\n  return (\n    <>\n      <MainTitle>Add recipe page</MainTitle>\n      <AddRecipeForm />\n    </>\n  )\n}\n\nexport default AddRecipe;\n","export const selectCategories = state => state.categories.items;\nexport const selectCategoriesLoading = state => state.categories.isLoading;\nexport const selectCategoriesError = state => state.categories.error;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","_ref","className","children","_jsxs","Title","_jsx","BsFillCircleFill","BsFillSquareFill","categories","handleFileChange","selectedFile","htmlFor","type","id","name","onChange","ErrorMessage","component","Field","placeholder","as","value","Array","isArray","map","category","_id","$oid","from","length","_","index","time","selectIngredients","state","ingredients","items","_useFormikContext","useFormikContext","values","setFieldValue","dispatch","useDispatch","useEffect","getIngredientsThunk","useSelector","loadIngredients","inputValue","callback","setTimeout","filteredIngredients","filter","ingredient","toLowerCase","includes","filterIngredients","FieldArray","render","push","remove","_Fragment","concat","AsyncSelect","cacheOptions","defaultOptions","loadOptions","getOptionLabel","option","getOptionValue","selectedOption","handleIngredientChange","measure","e","target","onClick","_useState","useState","_useState2","_slicedToArray","preparation","setPreparation","join","event","lines","split","step","WrapperStyles","css","Container","_templateObject2","AddRecipeButton","_templateObject3","navigate","useNavigate","selectCategories","setSelectedFile","getCategoriesList","handleFormSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","_iterator","_step","_step$value","key","response","wrap","_context","prev","next","FormData","append","title","JSON","stringify","description","forEach","_createForOfIteratorHelper","entries","s","n","done","console","log","err","f","addOwnRecipe","sent","t0","message","stop","_x","apply","arguments","Formik","initialValues","onSubmit","Form","RecipeDescription","file","currentTarget","files","RecipeIngredients","RecipePreparation","MainTitle","AddRecipeForm","selectCategoriesLoading","isLoading","selectCategoriesError","error"],"sourceRoot":""}