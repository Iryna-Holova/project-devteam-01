{"version":3,"file":"static/js/526.4c6168e2.chunk.js","mappings":"2OAmEA,UA1De,WACb,IAKMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,KAAXD,OAEFE,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,MAAM,8BAA8BC,SAAS,2BACjEC,SAAUH,EAAAA,KAAaE,SAAS,gCA+BlC,OALAE,EAAAA,EAAAA,YAAU,WACR,GAAIP,IAAWQ,EAAAA,GAAU,OAAOV,EAAS,KACrCE,IAAWS,EAAAA,IAAUC,MAAM,4BACjC,GAAG,CAACV,EAAQF,KAGVa,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACTC,cA7CgB,CACpBV,MAAO,GACPE,SAAU,IA4CNJ,iBAAkBA,EAClBa,aAjCe,SACnBC,EAAMC,GAEF,IADFC,EAAaD,EAAbC,cAAeC,EAAeF,EAAfE,gBAEjBA,EAAgB,SAAS,GACzBA,EAAgB,QAAQ,GAEH,KAAjBH,EAAOZ,MACTgB,QAAQC,IAAI,wEAEZD,QAAQC,IAAI,sGACZzB,GACE0B,EAAAA,EAAAA,IAAM,CACJlB,MAAOY,EAAOZ,MACdE,SAAUU,EAAOV,aAMvBY,GAAc,EAChB,EAaMK,OAAQ,eACRC,UAAW,WACXC,SAAU,UACVC,QAAS,aAIjB,C","sources":["pages/Signin.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport SharedForm from 'components/SharedForm/SharedForm';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport useAuth from 'hooks/use-auth';\nimport { REJECTED, RESOLVED } from 'utils/constants';\n\nconst Signin = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { status } = useAuth();\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Please enter a valid email').required('Please enter your email'),\n    password: Yup.string().required('Please enter your password'),\n  });\n\n  const handleSubmit = (\n    values,\n    { setSubmitting, setFieldTouched } //, resetForm\n  ) => {\n    setFieldTouched('email', true);\n    setFieldTouched('name', true);\n\n    if (values.email === '') {\n      console.log('Порожні поля');\n    } else {\n      console.log('Всі поля заповнені');\n      dispatch(\n        logIn({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      //resetForm();\n    }\n\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (status === RESOLVED) return navigate('/');\n    if (status === REJECTED) alert('Invalid email or password');\n  }, [status, navigate]);\n\n  return (\n    <div>\n      <SharedForm\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        handleSubmit={handleSubmit}\n        router={'Registration'}\n        urlRouter={'register'}\n        nameForm={'Sign in'}\n        nameBut={'Sign in'}\n      />\n    </div>\n  );\n};\n\nexport default Signin;\n"],"names":["dispatch","useDispatch","navigate","useNavigate","status","useAuth","validationSchema","Yup","email","required","password","useEffect","RESOLVED","REJECTED","alert","_jsx","children","SharedForm","initialValues","handleSubmit","values","_ref","setSubmitting","setFieldTouched","console","log","logIn","router","urlRouter","nameForm","nameBut"],"sourceRoot":""}