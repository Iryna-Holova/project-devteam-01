{"version":3,"file":"static/js/526.aa28fdd4.chunk.js","mappings":"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","sources":["components/SharedForm/SharedForm.jsx","components/SharedForm/SharedForm.styled.js","pages/Signin.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  StyledForm,\n  WordForm,\n  StyledField,\n  List,\n  SubButton,\n  Router,\n  Wrapper,\n} from './SharedForm.styled';\n\n// const isValidEmail = email => {\n//   const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//   return emailRegex.test(email);\n// };\n\n// const validate = (values) => {\n//   const errors = {};\n\n//   if (!values.email) {\n//     errors.email = 'Введіть електронну адресу';\n//   } else if (!isValidEmail(values.email)) {\n//     errors.email = 'Введіть правильну електронну адресу';\n//   }\n\n//   if (!values.name) {\n//     errors.name = 'Введіть ім\\'я';\n//   }\n\n//   if (!values.password) {\n//     errors.password = 'Введіть пароль';\n//   } else if (values.password.length < 6) {\n//     errors.password = 'Пароль повинен містити щонайменше 6 символів';\n//   }\n\n//   return errors;\n// };\n\nconst SharedForm = ({\n  initialValues,\n  validationSchema,\n  handleSubmit,\n  router,\n  nameForm,\n  urlRouter,\n  isRegisterForm,\n  nameBut,\n}) => {\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ isSubmitting }) => (\n          <StyledForm>\n            <WordForm>{nameForm}</WordForm>\n            <List>\n              <li>\n                {isRegisterForm && (\n                  <div>\n                    <StyledField\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      placeholder=\"Name\"\n                    />\n                    <ErrorMessage name=\"name\" component=\"div\" />\n                  </div>\n                )}\n              </li>\n              <li>\n                <div>\n                  <StyledField\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                  />\n                  <ErrorMessage name=\"email\" component=\"div\" />\n                </div>\n              </li>\n              <li>\n                <div>\n                  <StyledField\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                  />\n                  <ErrorMessage name=\"password\" component=\"div\" />\n                </div>\n              </li>\n            </List>\n\n            <SubButton type=\"submit\">{nameBut}</SubButton>\n          </StyledForm>\n        )}\n      </Formik>\n\n      <Link to={`/${urlRouter}`}>\n        <Router>{router}</Router>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default SharedForm;\n","import { styled } from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  flex-shrink: 0;\n  border-radius: 30px;\n  background: #2a2c36;\n  box-shadow: 0px 4px 48px 0px rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  padding: 32px 28px 40px;\n\n\n  max-width: 335px;\n  max-height: 350px;\n\n  @media screen and (min-width: 768px){\n    max-width: 500px;\n    max-height: 384px;\n  padding: 44px 50px;\n  }\n  \n  `;\n\nexport const WordForm = styled.h2`\n  color: #fafafa;\n  font-size: 28px;\n  font-weight: 600;\n  line-height: 30px;\n  letter-spacing: -0.56px;\n  margin-bottom: 32px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 279px;\n  flex-shrink: 0;\n  stroke-width: 1px;\n  stroke: #fff;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 50px;\n  background: transparent;\n  border-radius: 6px;\n  border: 1px solid gray;\n  color: #fafafa;\n  outline: none;\n\n  &::placeholder {\n    color: #ffffff;\n\n    font-family: Poppins;\n    font-size: 18px;\n    letter-spacing: -0.36px;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n\n  &:focus,\n  &:hover {\n    border: 1px solid #fff;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 340px;\n  }\n\n\n`;\n\nexport const List = styled.ul`\n  gap: 24px;\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n`;\n\nexport const SubButton = styled.button`\n  padding: 12px 106px;\n  margin-top: 50px;\n  cursor: pointer;\n  border-radius: 6px;\n  background: #8baa36;\n  color: #fafafa;\n  font-family: Poppins;\n  font-size: 16px;\n  border: none;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px){\n    padding: 21px 138px;\n    \n  }\n\n`;\n\nexport const Router = styled.p`\n  color: black;\n  margin-top: 18px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\n// @media screen and (min-width: 768px) {\n\n// }\n\n// @media screen and (min-width: 1440px) {\n\n// }","import React, { useEffect } from 'react';\nimport SharedForm from 'components/SharedForm/SharedForm';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport useAuth from 'hooks/use-auth';\nimport { REJECTED, RESOLVED } from 'utils/constants';\n\nconst Signin = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { status } = useAuth();\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required'),\n  });\n\n  const handleSubmit = (\n    values,\n    { setSubmitting, setFieldTouched } //, resetForm\n  ) => {\n    setFieldTouched('email', true);\n    setFieldTouched('name', true);\n\n    if (values.email === '') {\n      console.log('Порожні поля');\n    } else {\n      console.log('Всі поля заповнені');\n      dispatch(\n        logIn({\n          email: values.email,\n          password: values.password,\n        })\n      );\n      //resetForm();\n    }\n\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (status === RESOLVED) return navigate('/');\n    if (status === REJECTED) alert('Invalid email or password');\n  }, [status, navigate]);\n\n  return (\n    <div>\n      <SharedForm\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        handleSubmit={handleSubmit}\n        router={'Registration'}\n        urlRouter={'register'}\n        nameForm={'Sign in'}\n        nameBut={'Sign in'}\n      />\n    </div>\n  );\n};\n\nexport default Signin;\n"],"names":["_ref","initialValues","validationSchema","handleSubmit","router","nameForm","urlRouter","isRegisterForm","nameBut","_jsxs","Wrapper","children","_jsx","Formik","onSubmit","_ref2","isSubmitting","StyledForm","WordForm","List","StyledField","type","id","name","placeholder","ErrorMessage","component","SubButton","Link","to","concat","Router","styled","Form","_templateObject","_taggedTemplateLiteral","_templateObject2","Field","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","dispatch","useDispatch","navigate","useNavigate","status","useAuth","Yup","email","required","password","useEffect","RESOLVED","REJECTED","alert","SharedForm","values","setSubmitting","setFieldTouched","console","log","logIn"],"sourceRoot":""}